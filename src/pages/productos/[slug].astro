---
import Layout from '../../layouts/Layout.astro';
import type { Product } from '../../types/product';

interface Props {
    product: Product;
}

interface ImportMetaEnv {
    PUBLIC_API_URL: string;
}

declare global {
    interface ImportMeta {
        env: ImportMetaEnv;
    }
}

export async function getStaticPaths() {
    try {
        const response = await fetch(`${import.meta.env.PUBLIC_API_URL}/api/public/productos?site=site1`);
        const json = await response.json();
        const products = json.data;

        if (!Array.isArray(products)) {
            console.error('No products array in API response:', json);
            return [];
        }

        return products.map((product) => ({
            params: { slug: product._id },
            props: { product }
        }));
    } catch (error) {
        console.error('Error fetching products:', error);
        return [];
    }
}

const { product } = Astro.props as Props;

// SEO metadata
const title = product.seo?.title || `${product.name} | Química Industrial`;
const description = product.seo?.description || product.descriptions;
const keywords = product.seo?.keywords?.join(', ') || '';
const canonicalUrl = `https://quimicaindustrialpe.com/productos/${product._id}`;

// Prepare structured data
const structuredData = {
    "@context": "https://schema.org",
    "@type": "Product",
    "name": product.name,
    "description": product.descriptions,
    "image": product.images,
    "offers": {
        "@type": "AggregateOffer",
        "offerCount": product.presentations.length,
        "offers": product.presentations.map(p => ({
            "@type": "Offer",
            "name": p.name
        }))
    }
} as const;

// Add keywords to structured data if available
if (product.seo?.keywords && product.seo.keywords.length > 0) {
    (structuredData as any).keywords = product.seo.keywords.join(', ');
}
---

<Layout 
    title={title} 
    description={description} 
    canonicalUrl={canonicalUrl}
    keywords={keywords}
>
    <main class="product-page">
        <div class="container">
            <div class="product-grid">
                <div class="product-image">
                    <img 
                        src={product.images} 
                        alt={product.name}
                        width="600"
                        height="400"
                    />
                </div>
                <div class="product-info">
                    <h1>{product.name}</h1>
                    
                    <div class="product-details">
                        <section>
                            <h2>Presentaciones Disponibles</h2>
                            <ul>
                                {product.presentations.map(p => (
                                    <li>{p.name}</li>
                                ))}
                            </ul>
                        </section>

                        <section>
                            <h2>Categorías</h2>
                            <ul>
                                {product.categories.map(category => (
                                    <li>{category.name}</li>
                                ))}
                            </ul>
                        </section>

                        <section>
                            <h2>Descripción</h2>
                            <p>{product.descriptions}</p>
                        </section>

                        <section>
                            <h2>Usos</h2>
                            <p>{product.uses}</p>
                        </section>
                    </div>
                </div>
            </div>
        </div>
    </main>
</Layout>

<style>
    .product-page {
        padding: 2rem 0;
    }

    .container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 1rem;
    }

    .product-grid {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 2rem;
    }

    .product-image img {
        width: 100%;
        height: auto;
        border-radius: 8px;
        object-fit: cover;
    }

    .product-info h1 {
        font-size: 2.5rem;
        margin-bottom: 1.5rem;
        color: #1e3c72;
    }

    .product-details section {
        margin-bottom: 2rem;
        padding: 1.5rem;
        background-color: #f8f9fa;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
    }

    .product-details h2 {
        font-size: 1.5rem;
        margin-bottom: 1rem;
        color: #1e3c72;
    }

    .product-details ul {
        list-style: none;
        padding: 0;
    }

    .product-details li {
        margin-bottom: 0.5rem;
        padding: 0.5rem;
        background-color: white;
        border-radius: 4px;
        box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
    }

    @media (max-width: 768px) {
        .product-grid {
            grid-template-columns: 1fr;
        }
    }
</style>

<script type="application/ld+json" set:html={JSON.stringify(structuredData)} /> 